name: Notify Feishu on Issues

on:
  issues:
    types: [opened, reopened, edited, labeled, closed, assigned]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Build Feishu card payload
        env:
          LABELS: ${{ join(github.event.issue.labels.*.name, ', ') }}
        run: |
          cat > payload.json <<EOF
          {
            "msg_type": "interactive",
            "card": {
              "config": { "wide_screen_mode": true },
              "header": {
                "title": { "tag": "plain_text", "content": "🐙 GitHub Issue ${{ github.event.action }}: #${{ github.event.issue.number }}" }
              },
              "elements": [
                { "tag": "div",
                  "text": { "tag": "lark_md",
                            "content": "**${{ github.event.issue.title }}**\n作者：${{ github.event.issue.user.login }}\n状态：${{ github.event.issue.state }}" } },
                { "tag": "div",
                  "text": { "tag": "lark_md",
                            "content": "👉 [在 GitHub 打开](${{ github.event.issue.html_url }})" } },
                { "tag": "div",
                  "text": { "tag": "lark_md",
                            "content": "标签：$LABELS" } }
              ]
            }
          }
          EOF

      - name: Add optional signature (if FEISHU_SIGNKEY is set)
        if: ${{ secrets.FEISHU_SIGNKEY }}
        env:
          SIGNKEY: ${{ secrets.FEISHU_SIGNKEY }}
        run: |
          TS=$(date +%s)
          STRING_TO_SIGN="$TS\n$SIGNKEY"
          SIGN=$(printf "$STRING_TO_SIGN" | openssl dgst -sha256 -hmac "$SIGNKEY" -binary | base64)
          jq --arg ts "$TS" --arg sign "$SIGN" '. + {timestamp:$ts, sign:$sign}' payload.json > payload2.json
          mv payload2.json payload.json

      - name: Send to Feishu
        env:
          WEBHOOK: ${{ secrets.FEISHU_WEBHOOK }}
        run: |
          curl -s -X POST -H 'Content-Type: application/json' \
            -d @payload.json "$WEBHOOK"
